{extend name="public/public_main" /}
{block name="content"}
<div class="tip-btn-line">
    <div class="layui-btn layui-btn-small xu-icon-btn" onclick="javascript: location.reload();"><i class="layui-icon">&#x1002;</i></div>
    <a class="layui-btn layui-btn-small" id="addBtn"><i class="layui-icon">&#xe654;</i>添加</a>
    <!-- <div class="layui-btn layui-btn-small layui-btn-disabled"><i class="layui-icon">&#xe642;</i>编辑</div>
     <div class="layui-btn layui-btn-danger layui-btn-small layui-btn-disabled"><i class="layui-icon">&#xe640;</i>删除</div>-->
</div>
<table class="layui-table" id="rule" lay-filter="ruleTable"></table>
{/block}
{block name="script"}
<script type="text/html" id="rightToolBar">
    <a class="layui-btn layui-btn-mini xu-icon-btn" lay-event="edit"><i class="layui-icon">&#xe642;</i></a>
    <a class="layui-btn layui-btn-danger layui-btn-mini xu-icon-btn" lay-event="del"><i class="layui-icon">&#xe640;</i></a>

    <!-- 这里同样支持 laytpl 语法，如： -->
    {{#  if(d.auth > 2){ }}
    <a class="layui-btn layui-btn-mini" lay-event="check">审核</a>
    {{#  } }}
</script>
<script>
    layui.use(['element', 'layer', 'table'], function () {
        var $ = layui.$, element = layui.element, table = layui.table, layer = layui.layer;
        table.render({
            elem: "#rule"
            ,url: "{:url('index')}"  //赋值数据
            ,response: {
                statusCode: 200
                ,msgName: 'message'
            }
            ,cols: [[
                //{checkbox: true},
                {field:'id', width:80, title:'ID'},
                {field:'_name',  width:300, title:'标题'},
                {field:'name',  width:300, title:'规则URL'},
                {fixed: 'right', width:150, align:'center', toolbar: '#rightToolBar'}
            ]]
            ,even: true //开启隔行背景
            ,done: function (res, curr, count){
                //console.log(res);
                reSetIframeHeight();
            }
        });

        //监听工具条
        table.on('tool(ruleTable)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
            var data = obj.data; //获得当前行数据
            var layEvent = obj.event; //获得 lay-event 对应的值
            var tr = obj.tr; //获得当前行 tr 的DOM对象

            if(layEvent === 'detail'){ //查看
                //do somehing
            } else if(layEvent === 'del'){ //删除
                layer.confirm('真的删除行么', function(index){
                    obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                    layer.close(index);
                    location.reload();
                    //向服务端发送删除指令
                });
            } else if(layEvent === 'edit'){ //编辑
                //do something

                //同步更新缓存对应的值
                /* obj.update({
                 username: '123'
                 ,title: 'xxx'
                 });*/
            }
        });
        //监听复选框
        table.on('checkbox(ruleTable)', function(obj){
            console.log(obj.checked); //当前是否选中状态
            console.log(obj.data); //选中行的相关数据
            console.log(obj.type); //如果触发的是全选，则为：all，如果触发的是单选，则为：one
            var checkStatus = table.checkStatus('ruleTable');
            if (checkStatus.data.length != undefined && checkStatus.data.length > 0) {

            }
        });
    })
</script>
{/block}
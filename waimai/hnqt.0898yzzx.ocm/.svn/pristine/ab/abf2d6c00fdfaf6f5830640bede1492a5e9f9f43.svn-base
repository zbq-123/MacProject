{extend name="public/public_main" /}
{block name="content"}
<fieldset class="layui-elem-field layui-field-title">
    <legend>商品分类管理</legend>
</fieldset>
<div class="tip-btn-line">
    <div class="layui-btn layui-btn-sm xu-icon-btn" onclick="javascript: location.reload();"><i class="layui-icon">&#xe669; </i>刷新</div>
    <a class="layui-btn layui-btn-sm xu-icon-btn" href="{:url('add_category')}"><i class="layui-icon">&#xe608;</i>添加</a>
</div>


<div class="layui-form-item"></div>

<!--table-->
<table class="layui-table" id="dataTable" lay-filter="dataTable"></table>
{/block}
{block name="script"}



<!--typeNameTpl-->

<script type="text/html" id="storeTpl">
    {{#  if(d.store.name != undefined){ }}
    <span>{{d.store.name}}</span>
    {{#  } else { }}
    <span>无</span>
    {{# } }}
</script>


<!--toolBar-->
<script type="text/html" id="rightToolBar">
    <a class="layui-btn layui-btn-sm" lay-event="edit">修改</a>
    <a class="layui-btn layui-btn-sm layui-btn-danger" lay-event="delete">删除</a>
</script>

<script>
    layui.use(['element', 'layer', 'table', 'form', 'xlp'], function () {
        var $ = layui.jquery, element = layui.element, table = layui.table, layer = layui.layer, form = layui.form, xlp = layui.xlp;
        xlp.startLoading();

        //table生成
        var dataTable = table.render({
            elem: "#dataTable"
            ,url: "{:url('category')}"
            ,response: {
                statusCode: 200
                ,msgName: 'message'
            }
            ,cols: [[

                {field:'id', width:80,title:'ID'},
                {field:'store_id', title:'校区', templet: function (res){
                    if(res.campus){
                        return res.campus.name;
                    }
                }},
                {field:'store_id', title:'店铺', templet: "#storeTpl"},
                {field:'name',width:150, title:'分类名称'},
                {field:'sort', title:'排序',edit: 'text',sort:true},
                {field:'update_time',width:160, title:'更新时间'},
                {fixed: 'right',width:400, align:'center', toolbar: '#rightToolBar', title:'操作'}
            ]]
            ,page: {
                layout: ['limit', 'count', 'prev', 'page', 'next', 'skip']
                ,groups: 5
                ,first: false
                ,last: false
            }
            ,done: function (res, curr, count){
                xlp.reSetIframeHeight();
                xlp.closeLoading();
            }
        });


        //监听工具条
        table.on('tool(dataTable)', function(obj){
            var data = obj.data;
            var layEvent = obj.event;

            if(layEvent === 'delete'){ //撤销
                layer.confirm("确定删除吗?", function(index){
                    xlp.postHttp("{:url('delete_category')}", {
                        id: data.id,
                    }, function (res) {
                        obj.del();
                        layer.close(index);
                        layer.msg('删除成功');
                    });
                });
            }else if(layEvent == 'edit') {
                location.href = "{:url('edit_category')}?id="+data.id;}
        });


        $("#addBtn").on('click', function () {
            location.href ="{:url('edit')}";
        });
        //监听指定开关
        form.on('switch(switchTest)', function(data){
            value = this.value;
            if (data.elem.checked == true) {
                xlp.postHttp("{:url('status')}", {
                    id: value,
                    status: 2
                }, function (res) {
                    layer.msg("营业中");
                })
            }
            else{
                xlp.postHttp("{:url('status')}", {
                    id: value,
                    status: 1
                }, function (res) {
                    layer.msg("休息中");
                })
            }

        });




        //编辑排序
        table.on('edit(dataTable)', function(obj){
            xlp.postHttp("{:url('edit_sort_category')}", {
                id: obj.data.id,
                sort: obj.value
            }, function(res) {
                layer.msg("修改成功");
            })
        });
        //搜索
        form.on('submit(search)', function (data) {
            xlp.startLoading();
            dataTable.reload({
                where: {
                    fields: data.field
                }
                ,page: {
                    layout: ['limit', 'count', 'prev', 'page', 'next', 'skip']
                    ,groups: 5
                    ,first: false
                    ,last: false
                    ,curr: 1 //重新从第 1 页开始
                }
            });
            return false;
        });

        //搜索
        form.on('submit(search3)', function (data) {
            xlp.startLoading();
            dataTable.reload({
                where: {
                    fields: data.data.field
                }
                ,page: {
                    layout: ['limit', 'count', 'prev', 'page', 'next', 'skip']
                    ,groups: 5
                    ,first: false
                    ,last: false
                    ,curr: 1 //重新从第 1 页开始
                }
            });
            return false;
        });
        layui.use('table', function(){
            var table = layui.table;

            //监听表格复选框选择
            table.on('checkbox(dataTable)', function(obj){
                console.log(obj)
            });

            var $ = layui.$, active = {
                getCheckData: function(){ //获取选中数据
                    var checkStatus = table.checkStatus('dataTable')
                        ,arr =new Array
                        ,data = checkStatus.data
                        ,i =checkStatus.data.length;
                    for(var k=0;k<i;k++){
                        arr[k]=data[k]['id'];
                    }
                    /*    layer.msg('选中了：'+data.length+'个'+arr);*/


                    layer.confirm("确定批量确认订单吗?", function(index){
                        for(var k=0;k<i;k++){
                            xlp.postHttp("{:url('order/confirm')}", {
                                    id: arr[k],
                                    status:3,
                                }
                                , function (res) {
                                });
                        }
                        layer.close(index);
                        layer.msg('审核成功');
                        location.reload();
                    });


                }

            };
            element.on('tab(typeNews)', function(data){

                /* console.log(this); //当前Tab标题所在的原始DOM元素
                 console.log(data.index); //得到当前Tab的所在下标
                 console.log(data.elem); //得到当前的Tab大容器*/
                xlp.startLoading();
                dataTable.reload({
                    where: {
                        status: data.index
                    }
                });
            });
            element.on('tab(typeNews1)', function(data){

                /* console.log(this); //当前Tab标题所在的原始DOM元素
                 console.log(data.index); //得到当前Tab的所在下标
                 console.log(data.elem); //得到当前的Tab大容器*/
                xlp.startLoading();
                dataTable.reload({
                    where: {
                        paystatus: data.index
                    }
                });
            });

            $('.demoTable .layui-btn').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
        });
    })
</script>
{/block}